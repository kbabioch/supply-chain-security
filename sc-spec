#! /usr/bin/env python3
#
# Copyright (c) 2018 Karol Babioch <kbabioch@suse.de>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import argparse
import sys
import supplychain.rpmspec
import supplychain.check
import supplychain.harden

# Argument parser
def parse_args(args):
    parser = argparse.ArgumentParser(description='Analyzes RPM file(s) for potential of hardening the supply chain')
    parser.add_argument('files', metavar='SPECFILE', nargs='+', help='Spec file to analyze', type=str)
    return parser.parse_args(args)

args = parse_args(sys.argv[1:])

replacer = supplychain.harden.HttpReplacer()

for file in args.files:

  # Look for http URLs
  with open(file) as f:
    for line in f:
      # TODO Method to get URLs in a line needed (instead of comparison hack and stripping)
      if line != replacer.replace(line):
        print('Potentially unused https:// found: {}'.format(line.strip()))

  # Get sources from RPM file
  p = supplychain.rpmspec.Parser(file)
  sources = p.get_sources()

  for source in sources:
    checker = supplychain.check.SignatureCheck(source[1])
    if checker.isSignatureFileAvailable():
      print('Signed source available for: {}'.format(checker.getSignatureFileURL()))

